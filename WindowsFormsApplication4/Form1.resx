<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGhoAAAEAGACwCAAAFgAAACgAAAAaAAAANAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AADz8/Pz8/Py8vLy8vLz8/Py8vLz8/Py8vLz8/Pz8/Pz8/Py8vLz8/Pz8/Pz8/Pz8/Pz8/Pz8/Py8vLz
        8/Pz8/Pz8/Pz8/Py8vLz8/Pz8/MAAPLy8vPz8/Pz8tTT1MTExMTEw8PDw8PDw8TExMPDw8TEw8TExMTE
        xMTExMPDw8PDw8TFxMPDw8PDxMPExMTDxMbFxurp6vPz8/Pz8/Ly8gAA8/Pz8vLy8vPxc3N0MzE1OTc7
        OTg8ODc8ODc8OTc8ODc7OTc8ODc8OTc8OTc8OTc8OTg8ODc8OTc8ODc8ODc7NjU30dDR8vLy8fHx8fHx
        AADz8/Py8vLy8/GWlZdiYmOEhIWFhIWEhIWFhYaEhIWEhIWFhIWEhIWFhYaEhIWEhIWFhIaEhIWFhYaF
        hIaCgYNPTlDj4+Tz8/Py8vLy8vIAAPLy8vLy8vPz8rW0tlVUVmtqbGxsbmxsbmxrbW1sbmxsbWxsbm1t
        bmxrbWxsbmxsbWxsbW1sbmxrbmxrbWppa09OUPPz8/Ly8vTz8/X09AAA8vLy8/Pz8/PytbS1S0pMXFtd
        XFxeXV1eXFxdXVxeXV1eXV1eXV1eXFxdXV1fXV1eXFxdXV1fXVxdXVxeW1pdS0pN8/Pz8/Pz9PPz9fPz
        AADz8/Py8vLy8/K0tLWAf4GxsLKysbOysbOysbOxsLKysbOxsLKxsLOysbOxsLOysbOysbOxsLKysbOy
        sbOura9jYmTy8fLz8/Pz8/Py8vIAAPPz8/Pz8/Lz8rS0tWxrbZGQkpKRk5KRk5GQkpKRkpGQkpKRk5KR
        k5GQkpGQkpGQkpCPkZGQkpGQkpGQko2MjllYWvLy8/Pz8/Pz8/Ly8gAA9PT08vLy8/PytbS1SUhKWVha
        WVhaWllbWVhaWVhaWVhaWVhaWFdZWVhaWVhaWVhaWllbWVhaWVhaWVhaWFdaSkpM8/Pz8/Pz8vLy8/Pz
        AAD09PTz8/Py8/G1tLVcW113dnh4d3l4d3l4d3l4d3l4d3l4d3l3dnh4d3l3dnh4d3l4d3l4d3l4d3l3
        dnh0c3ZSUVPy8vLz8/P09PTy8vIAAPPz8/Ly8vLz8bW0tXNydJ2cnp6dn56dn56dn56dn56dn56dn56d
        n56dn56dn56dn56dnp6dn52cnp6dn5mYmlxbXfHw8fLy8vLy8vHx8QAA8vLy8/Pz8vPytbW2ZGNlgoGD
        g4KEg4KEgoGDgoGDg4KEgoGDg4KEg4KEg4KEg4KEg4KEgoGDgoGDgoGDf36AVVRW8vHz8vLy8/Pz8/Pz
        AADy8vLy8vLz9PK1tLZJSEpZWFpZWFpZWFpaWVtaWVtYV1lZWFpZWFpYV1laWVtaWVtZWFpZWFpZWFpZ
        WFpXVllKSUvz8/Py8vLy8vLz8/MAAPLy8vLy8vLz8bW0tWtqbJCPkZGQkpGQkpGQkpGQkpGQkpGQkpGQ
        kpKRkpCPkZGQkpGQkpGQkpGQkpGQko2Mj1hXWvLy8vHx8fLy8vLy8gAA8vLy8vLy8vPytbW1fHt9q6qs
        raytrKutrKutrKutq6qsrKutq6qsrKusrKutrayurKutraytrKutrKutp6aoYF9h8/Lz8vLy8/Pz8/Pz
        AADz8/Py8vLz8/O1tbVIR0lWVVdWVVdWVVdVVFZWVVdWVVdWVVdWVVdWVVdWVVdWVVdWVVdWVVdXVlhW
        VVdUU1VJSEry8vPz8/Pz8/Py8vIAAPPz8/Ly8vLz8rW0tVdWWHBvcW9ucG9ucG9ucG9ucHBvcW9ucG9u
        cHBvcXBvcHBvcHBvcW5tb29ucG9ucG1sblBPUfLy8/Pz8/Ly8vPz8wAA8/Pz8vLy8vPxtbS1eHd5pKOl
        pqWnpaSmpaSmpaSmpaSmpqWnpaSmpKOlpaSmpaSmpaSlpaSmpaSmpaSmn56gXl1f8fHy8fHx8fHx8vLy
        AADy8vLz8/Pz8/K0tLVlZGaGhYeGhYeGhYeGhYeFhIaGhYeGhYaGhYeGhYeGhYeGhYeFhIaFhIaGhYeF
        hIaDgoRWVVfy8vPz8/Pz8/Py8vIAAPLy8vLy8vPz87W0tUdGSFZVV1dWWFdWWFZVV1ZVV1ZVV1ZVV1dW
        WFdWWFdWWFdWWFdWWFdWWFdWWFZVV1VUVkpJS/Py9PPz8/Pz8/Pz8wAA8vLy8/Pz8/PzpqWnPDs/R0ZK
        R0ZJR0ZKR0ZKR0ZKRkVJR0ZKR0ZKR0ZKSEdLR0ZKRkVJR0ZKR0ZKSEdLRURIPj1A4ODg8vLy8/Pz8/Pz
        AADz8/Pz8/Pz8/N5eHxYV1tWVVlXVlpXVlpWVVlXVlpXVlpXVlpXVlpWVVlXVlpXVlpXVlpXVlpWVVlY
        V1tXVlpYV1mjo6Py8vLy8vLy8vIAAPLy8vPz8/Pz805NUSEgJCEgJCEgJCEgJCEgJCEgJCEgJCEgJCEg
        JCEgJCEgJCEgJCEgJCEgJCEgJCEgJCEgJCIhJYWEh/Pz8/Ly8vPz8wAA8fHx8/Pz8/PzTk1QIiElISAk
        IiElISAkISAkIiElIiElISAkISAkISAkISAkISAkIiElISAkISAkISAkIiElIiElg4OF8/Pz8vLy8/Pz
        AADy8vLx8fHy8vLo6Ojl5eXl5eXl5eXm5ubl5eXl5eXm5ubl5eXl5eXm5ubl5eXl5ebl5eXl5eXm5ubl
        5eXl5eXm5ubr6uvy8vLy8vLy8vIAAPPz8/Pz8/Pz8/Pz8/Pz8/Ly8vLy8vLy8vPz8/Ly8vPz8/Ly8vPz
        8/Pz8/Ly8vLy8vPz8/Ly8vPz8/Ly8vPz8/Pz8/Ly8vLy8vPz8/Pz8wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>